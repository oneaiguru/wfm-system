[pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Pytest plugins
addopts = 
    --verbose
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=70
    --maxfail=1
    --disable-warnings
    -p no:warnings

# Async support
asyncio_mode = auto

# Custom markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    critical: Critical functionality tests
    performance: Performance tests
    bdd: BDD tests
    database: Database tests
    api: API tests
    websocket: WebSocket tests
    algorithm: Algorithm tests
    ui: UI component tests

# Coverage settings
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */migrations/*
    */config/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# BDD settings
[tool:pytest:bdd]
features_base_dir = tests/bdd/features
step_definitions_dir = tests/bdd/step_definitions

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test output
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = true