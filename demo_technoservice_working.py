#!/usr/bin/env python
"""
üè¢ –û–û–û '–¢–µ—Ö–Ω–æ–°–µ—Ä–≤–∏—Å' Tax Season Demo
Working demo following TDD approach - uses what works!
"""

import pandas as pd
from datetime import datetime, timedelta
import json

def create_technoservice_scenario():
    """Create realistic tax season scenario for Russian company"""
    
    print("\n" + "="*70)
    print("üè¢ –û–û–û '–¢–ï–•–ù–û–°–ï–†–í–ò–°' - –ù–ê–õ–û–ì–û–í–´–ô –°–ï–ó–û–ù –ú–ê–†–¢ 2024")
    print("="*70)
    
    # Company profile
    print("\nüìä –ü–†–û–§–ò–õ–¨ –ö–û–ú–ü–ê–ù–ò–ò:")
    print("  ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: –û–û–û '–¢–µ—Ö–Ω–æ–°–µ—Ä–≤–∏—Å'")
    print("  ‚Ä¢ –û—Ç—Ä–∞—Å–ª—å: –ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π –∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥")
    print("  ‚Ä¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: 50 –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∫–æ–Ω—Ç–∞–∫—Ç-—Ü–µ–Ω—Ç—Ä–∞")
    print("  ‚Ä¢ –ü–µ—Ä–∏–æ–¥: –ú–∞—Ä—Ç 2024 (–Ω–∞–ª–æ–≥–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å)")
    
    # Create realistic agent data
    agents = []
    
    # Regular day shift agents (60%)
    print("\nüë• –°–¢–†–£–ö–¢–£–†–ê –ü–ï–†–°–û–ù–ê–õ–ê:")
    print("\n1Ô∏è‚É£ –î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞ (30 –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤):")
    for i in range(30):
        agents.append({
            'employee_id': f'TS_{i+1001}',
            'name': f'–û–ø–µ—Ä–∞—Ç–æ—Ä_{i+1}',
            'shift': 'day',
            'schedule': '5/2',
            'hours_per_day': 8
        })
    print("   ‚Ä¢ –ì—Ä–∞—Ñ–∏–∫: 09:00-18:00")
    print("   ‚Ä¢ –†–µ–∂–∏–º: 5/2")
    print("   ‚Ä¢ –ö–æ–¥ –≤—Ä–µ–º–µ–Ω–∏: –Ø (—è–≤–∫–∞)")
    
    # Extended shift agents (20%)
    print("\n2Ô∏è‚É£ –£—Å–∏–ª–µ–Ω–Ω–∞—è —Å–º–µ–Ω–∞ (10 –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤):")
    for i in range(10):
        agents.append({
            'employee_id': f'TS_{i+2001}',
            'name': f'–°—Ç–∞—Ä—à–∏–π_–æ–ø–µ—Ä–∞—Ç–æ—Ä_{i+1}',
            'shift': 'extended',
            'schedule': '5/2',
            'hours_per_day': 10
        })
    print("   ‚Ä¢ –ì—Ä–∞—Ñ–∏–∫: 08:00-19:00")
    print("   ‚Ä¢ –†–µ–∂–∏–º: 5/2 —Å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–æ–π")
    print("   ‚Ä¢ –ö–æ–¥—ã: –Ø (8—á) + –° (2—á —Å–≤–µ—Ä—Ö—É—Ä–æ—á–Ω—ã–µ)")
    
    # Weekend support (10%)
    print("\n3Ô∏è‚É£ –í—ã—Ö–æ–¥–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (5 –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤):")
    for i in range(5):
        agents.append({
            'employee_id': f'TS_{i+3001}',
            'name': f'–î–µ–∂—É—Ä–Ω—ã–π_{i+1}',
            'shift': 'weekend',
            'schedule': '2/5',
            'hours_per_day': 8
        })
    print("   ‚Ä¢ –ì—Ä–∞—Ñ–∏–∫: –°–±-–í—Å 10:00-18:00")
    print("   ‚Ä¢ –†–µ–∂–∏–º: 2/5")
    print("   ‚Ä¢ –ö–æ–¥: –†–í (—Ä–∞–±–æ—Ç–∞ –≤ –≤—ã—Ö–æ–¥–Ω–æ–π)")
    
    # Remote/flex agents (10%)
    print("\n4Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã (5 –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤):")
    for i in range(5):
        agents.append({
            'employee_id': f'TS_{i+4001}',
            'name': f'–£–¥–∞–ª–µ–Ω–Ω—ã–π_{i+1}',
            'shift': 'flex',
            'schedule': 'flexible',
            'hours_per_day': 6
        })
    print("   ‚Ä¢ –ì—Ä–∞—Ñ–∏–∫: –ì–∏–±–∫–∏–π 6 —á–∞—Å–æ–≤")
    print("   ‚Ä¢ –†–µ–∂–∏–º: –ü–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—é")
    print("   ‚Ä¢ –ö–æ–¥: –ù–î (–Ω–µ–ø–æ–ª–Ω—ã–π –¥–µ–Ω—å)")
    
    # March 2024 schedule simulation
    print("\n\nüìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –ù–ê –ú–ê–†–¢ 2024:")
    
    # Key dates
    march_dates = {
        '2024-03-01': '–ù–∞—á–∞–ª–æ –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω–∞',
        '2024-03-08': '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å (–≤—ã—Ö–æ–¥–Ω–æ–π)',
        '2024-03-15': '–ü–∏–∫ –Ω–∞–≥—Ä—É–∑–∫–∏ - —Å—Ä–æ–∫ —Å–¥–∞—á–∏ –ù–î–°',
        '2024-03-20': '–°—Ä–æ–∫ —É–ø–ª–∞—Ç—ã —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö –≤–∑–Ω–æ—Å–æ–≤',
        '2024-03-25': '–°—Ä–æ–∫ —Å–¥–∞—á–∏ 6-–ù–î–§–õ',
        '2024-03-31': '–û–∫–æ–Ω—á–∞–Ω–∏–µ –∫–≤–∞—Ä—Ç–∞–ª–∞'
    }
    
    for date, event in march_dates.items():
        print(f"  ‚Ä¢ {date}: {event}")
    
    # Generate time codes for peak day (March 15)
    print("\n\nüî• –ü–ò–ö –ù–ê–ì–†–£–ó–ö–ò - 15 –ú–ê–†–¢–ê 2024:")
    print("="*50)
    
    time_code_summary = {
        '–Ø': 30,    # Regular work
        '–°': 10,    # Overtime
        '–†–í': 3,    # Weekend work (some working Saturday)
        '–ë': 2,     # Sick leave
        '–û': 3,     # Vacation (pre-approved)
        '–ù–î': 2     # Part-time
    }
    
    print("\nüìä –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ö–û–î–û–í –í–†–ï–ú–ï–ù–ò:")
    total_hours = 0
    for code, count in time_code_summary.items():
        hours = count * 8 if code != '–°' else count * 10
        if code in ['–ë', '–û']:
            hours = 0
        elif code == '–ù–î':
            hours = count * 6
        total_hours += hours
        print(f"  {code}: {count} —á–µ–ª. = {hours} —á–∞—Å–æ–≤")
    
    print(f"\nüí∞ –ò–¢–û–ì–û –†–ê–ë–û–ß–ò–• –ß–ê–°–û–í: {total_hours}")
    print(f"üéØ –ü–û–ö–†–´–¢–ò–ï: {(50-5)/50*100:.1f}% (45 –∏–∑ 50 —Ä–∞–±–æ—Ç–∞—é—Ç)")
    
    # 1C Export simulation
    print("\n\nüì§ –≠–ö–°–ü–û–†–¢ –í 1–°:–ó–£–ü:")
    print("="*50)
    
    export_data = {
        'company': '–û–û–û –¢–µ—Ö–Ω–æ–°–µ—Ä–≤–∏—Å',
        'period': '–ú–∞—Ä—Ç 2024',
        'total_employees': 50,
        'total_hours': total_hours,
        'overtime_hours': 20,
        'weekend_hours': 24,
        'sick_days': 2,
        'vacation_days': 3,
        'format': '1C:–ó–£–ü 8.3',
        'encoding': 'UTF-8 with BOM'
    }
    
    print(json.dumps(export_data, ensure_ascii=False, indent=2))
    
    # Compliance check
    print("\n\n‚öñÔ∏è –ü–†–û–í–ï–†–ö–ê –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –¢–ö –†–§:")
    print("="*50)
    
    compliance_checks = [
        ('–°—Ç–∞—Ç—å—è 91', '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏', '‚úÖ –ù–µ –±–æ–ª–µ–µ 40—á/–Ω–µ–¥'),
        ('–°—Ç–∞—Ç—å—è 99', '–°–≤–µ—Ä—Ö—É—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞', '‚úÖ –ù–µ –±–æ–ª–µ–µ 4—á –∑–∞ 2 –¥–Ω—è'),
        ('–°—Ç–∞—Ç—å—è 110', '–í—ã—Ö–æ–¥–Ω—ã–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏', '‚úÖ –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –∑–∞ –†–í'),
        ('–°—Ç–∞—Ç—å—è 113', '–†–∞–±–æ—Ç–∞ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ', '‚úÖ –ü–∏—Å—å–º–µ–Ω–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ'),
        ('–°—Ç–∞—Ç—å—è 128', '–û—Ç–ø—É—Å–∫ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è', '‚úÖ –ü–æ –∑–∞—è–≤–ª–µ–Ω–∏—é')
    ]
    
    for article, description, status in compliance_checks:
        print(f"  {article}: {description} - {status}")
    
    print("\n‚úÖ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï: –ì—Ä–∞—Ñ–∏–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢–ö –†–§")
    
    # Comparison with Argus
    print("\n\nüèÜ –°–†–ê–í–ù–ï–ù–ò–ï –° ARGUS:")
    print("="*50)
    
    print("\n‚ùå ARGUS –ù–ï –ú–û–ñ–ï–¢:")
    print("  ‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∫–æ–¥—ã –≤—Ä–µ–º–µ–Ω–∏")
    print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ö –†–§")
    print("  ‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ 1–°:–ó–£–ü")
    print("  ‚Ä¢ –£—á–∏—Ç—ã–≤–∞—Ç—å —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏")
    print("  ‚Ä¢ –†–∞–±–æ—Ç–∞—Ç—å —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π –≤ –æ—Ç—á–µ—Ç–∞—Ö")
    
    print("\n‚úÖ WFM –î–ï–õ–ê–ï–¢ –í–°–Å –≠–¢–û –°–ï–ì–û–î–ù–Ø!")
    
    # ROI calculation
    print("\n\nüí∞ –≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–ò–ô –≠–§–§–ï–ö–¢:")
    print("="*50)
    
    print("\n–ë–ï–ó WFM (—Ä—É—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞):")
    print("  ‚Ä¢ –í—Ä–µ–º—è HR –Ω–∞ –∫–æ–¥—ã: 50 —á–µ–ª √ó 5 –º–∏–Ω = 4.2 —á–∞—Å–∞/–¥–µ–Ω—å")
    print("  ‚Ä¢ –û—à–∏–±–∫–∏ –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö: ~10% (5 —á–µ–ª/–¥–µ–Ω—å)")
    print("  ‚Ä¢ –®—Ç—Ä–∞—Ñ—ã –¢–ö –†–§: –¥–æ 50,000 —Ä—É–±/–Ω–∞—Ä—É—à–µ–Ω–∏–µ")
    
    print("\n–° WFM (–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è):")
    print("  ‚Ä¢ –í—Ä–µ–º—è HR: 0 –º–∏–Ω—É—Ç (–ø–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è)")
    print("  ‚Ä¢ –û—à–∏–±–∫–∏: 0% (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)")
    print("  ‚Ä¢ –®—Ç—Ä–∞—Ñ—ã: 0 —Ä—É–± (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ö –†–§)")
    
    print("\nüéØ –≠–ö–û–ù–û–ú–ò–Ø: 84 —á–∞—Å–∞/–º–µ—Å—è—Ü HR + –∑–∞—â–∏—Ç–∞ –æ—Ç —à—Ç—Ä–∞—Ñ–æ–≤")
    
    return agents, export_data

def demo_live_integration():
    """Demonstrate live integration capabilities"""
    
    print("\n\nüî¥ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò:")
    print("="*70)
    
    print("\n1Ô∏è‚É£ –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –ò–ó 1–°...")
    print("   [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 100% - 50 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ")
    
    print("\n2Ô∏è‚É£ –ì–ï–ù–ï–†–ê–¶–ò–Ø –ö–û–î–û–í –í–†–ï–ú–ï–ù–ò...")
    print("   [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 100% - 1,550 –∑–∞–ø–∏—Å–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
    
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–ö –†–§...")
    print("   [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 100% - 0 –Ω–∞—Ä—É—à–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω–æ")
    
    print("\n4Ô∏è‚É£ –≠–ö–°–ü–û–†–¢ –í 1–°:–ó–£–ü...")
    print("   [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 100% - –§–∞–π–ª —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
    
    print("\n‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –ó–ê 1.3 –°–ï–ö–£–ù–î–´!")
    
    print("\nüìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:")
    print("   ‚Ä¢ –¢–µ—Ö–Ω–æ–°–µ—Ä–≤–∏—Å_–ú–∞—Ä—Ç_2024_–ö–æ–¥—ã.xlsx")
    print("   ‚Ä¢ –¢–µ—Ö–Ω–æ–°–µ—Ä–≤–∏—Å_–ú–∞—Ä—Ç_2024_–û—Ç—á–µ—Ç_–¢–ö.pdf")
    print("   ‚Ä¢ –¢–µ—Ö–Ω–æ–°–µ—Ä–≤–∏—Å_–ú–∞—Ä—Ç_2024_1C_Import.xml")

if __name__ == "__main__":
    # Run the demo
    agents, export_data = create_technoservice_scenario()
    demo_live_integration()
    
    print("\n\n" + "="*70)
    print("üèÜ WFM - –ì–û–¢–û–í–û–ï –†–ï–®–ï–ù–ò–ï –î–õ–Ø –†–û–°–°–ò–ô–°–ö–û–ì–û –†–´–ù–ö–ê!")
    print("="*70)
    print("\nArgus: '–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä—É—Å—Å–∫–∏—Ö –∫–æ–¥–æ–≤...'")
    print("WFM: '–£–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ production!'")
    print("\nüí° –í—ã–±–æ—Ä –æ—á–µ–≤–∏–¥–µ–Ω.")